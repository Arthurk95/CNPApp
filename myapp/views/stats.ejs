<!-- Code from d3-graph-gallery.com -->
<!DOCTYPE html>
<html>
  <nav><%- include header.ejs %></nav>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <!-- Load d3.js -->
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="http://d3js.org/d3.v3.js"></script>
    <script src="https://d3js.org/d3.v5.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

    <!-- Color scale -->
    <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

  </head>

  <body>

    <!-- Navigation -->
    <div id="navigation">
      <nav class="navbar navbar-expand-lg navbar-light bg-light solid w-100">
        <span class="navbar-brand mb-0 h1">CNP Statistics</span>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        
          <!-- Month selection -->
          <ul class="navbar-nav pull-right">
            <li class="nav-item" id="form">
              <div class="float-right">
                <form id="myForm">
                  <input id="hiddenstartDate" value="<%- startDate %>" style="display: none;"></input>
                  <label>Beginning Date</label>
                  <select id="syear" class="pretty-classic" onchange="sgenDays();">
                  </select>

                  <select id="smonth" class="pretty-classic" onchange="sgenDays();">
                    <option value="01">Jan</option>
                    <option value="02">Feb</option>
                    <option value="03">Mar</option>
                    <option value="04">Apr</option>
                    <option value="05">May</option>
                    <option value="06">Jun</option>
                    <option value="07">Jul</option>
                    <option value="08">Aug</option>
                    <option value="09">Sep</option>
                    <option value="10">Oct</option>
                    <option value="11">Nov</option>
                    <option value="12">Dec</option>
                  </select>
    
                  <select id="sday" class="pretty-classic">
                  </select>
                  <label>End Date</label>
                  <select id="eyear" class="pretty-classic" onchange="egenDays();">
                  </select>
                  
                  <select id="emonth" class="pretty-classic" onchange="egenDays();">
                    <option value="01">Jan</option>
                    <option value="02">Feb</option>
                    <option value="03">Mar</option>
                    <option value="04">Apr</option>
                    <option value="05">May</option>
                    <option value="06">Jun</option>
                    <option value="07">Jul</option>
                    <option value="08">Aug</option>
                    <option value="09">Sep</option>
                    <option value="10">Oct</option>
                    <option value="11">Nov</option>
                    <option value="12">Dec</option>
                  </select>
    
                  <select id="eday" class="pretty-classic">
                  </select>
                  <a id="testy" onclick="getRecords('Students','Activities', '14', 'clear sky', this);">test data</a>
                </form>
              </div> <!-- end month selection-->
            </li>
          </ul>
        </div>
      </nav>
    </div> <!-- end navigation -->

    <!-- PIE CHART -->
    <div class="chart" id="pie">
      <h1>Pie Chart</h1>
      <!-- Make a pie chart -->
      <button onclick="makePie('#pie')">Make Pie</button>
      <!-- <button onclick = "pieOptions()"> more buttons</button> --> 
      <script>
        var hello = [];
        var data1 = {a: 9, b: 20, c:30, d:8, e:12}
        var data2 = {a: 6, b: 16, c:20, d:14, e:19, f:12, g:20, h:5}
        function makePie(id){
          let pie1 = new thePie(id);
          hello.push(pie1);
          pie1.plotPie(id);
        };
      </script>

      <!-- Add 2 buttons -->
      <button onclick="pieChange('data1')">Data 1</button>
      <script>
        function pieChange(name){
          hello.forEach((element) => {element.update({a: 9, b: 20, c:30, d:8, e:12});});
        }
      </script>

      <button onclick="changePie('data2')">Data 2</button>
      <script>
        function changePie(name){
         hello.forEach((element) => {element.update({a: 6, b: 16, c:20, d:14, e:19, f:12, g:20, h:5});}); 
        }
      </script>

      <div id="navigationPie">
      <ul class="navbar-nav">
        <li class="nav-item" id="form2">
          <div class="float-left">
            <form id="myForm">
              <label>First thing</label>
              <select id="selectThing1"></select>
              <label>Second thing</label>
              <select id="selectThing2"></select>
            </form>
          </div>
       </div>
        <!-- Create a div where the graph will take place -->
      <div id="pie"></div>
        
    </div> <!-- end Pie -->

    
    <!-- LINE CHART -->
    <div class="chart" id="line">
      <h1>Line Chart</h1>

      <!-- Initialize a select button -->
      <select id="selectButton"></select>
      <!--<button onclick=makeLine()>hi</button> -->
      <!-- Create a div where the graph will take place -->
      <div id="my_dataviz"></div>
      <script>

        // set the dimensions and margins of the graph
        var margin = {top: 10, right: 100, bottom: 30, left: 30},
        width = 460 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

        // append the svg object to the body of the page
        var svg1= d3.select("#my_dataviz")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
              "translate(" + margin.left + "," + margin.top + ")");

        //Read the data
        d3.csv("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_connectedscatter.csv", function(data) {

        // List of groups (here I have one group per column)
        var allGroup = ["valueA", "valueB", "valueC"]

        // add the options to the button
        d3.select("#selectButton")
          .selectAll('myOptions')
          .data(allGroup)
          .enter()
          .append('option')
          .text(function (d) { return d; }) // text showed in the menu
          .attr("value", function (d) { return d; }) // corresponding value returned by the button

        // A color scale: one color for each group
        var myColor = d3.scaleOrdinal()
          .domain(allGroup)
          .range(d3.schemeSet2);

        // Add X axis --> it is a date format
        var x = d3.scaleLinear()
          .domain([0,10])
          .range([ 0, width ]);
        svg1.append("g")
          .attr("transform", "translate(0," + height + ")")
          .call(d3.axisBottom(x));

        // Add Y axis
        var y = d3.scaleLinear()
          .domain( [0,20])
          .range([ height, 0 ]);
        svg1.append("g")
          .call(d3.axisLeft(y));

        // Initialize line with group a
        var line = svg1
          .append('g')
          .append("path")
            .datum(data)
            .attr("d", d3.line()
              .x(function(d) { return x(+d.time) })
              .y(function(d) { return y(+d.valueA) })
            )
            .attr("stroke", function(d){ return myColor("valueA") })
            .style("stroke-width", 4)
            .style("fill", "none")

        // A function that update the chart
        function updateLine(selectedGroup) {

          // Create new data with the selection?
          console.log(data);
          var dataFilter = data.map(function(d){return {time: d.time, value:d[selectedGroup]} })

          // Give these new data to update line
          line
              .datum(dataFilter)
              .transition()
              .duration(1000)
              .attr("d", d3.line()
                .x(function(d) { return x(+d.time) })
                .y(function(d) { return y(+d.value) })
              )
              .attr("stroke", function(d){ return myColor(selectedGroup) })
        }

        // When the button is changed, run the updateChart function
        d3.select("#selectButton").on("change", function(d) {
            // recover the option that has been chosen
            var selectedOption = d3.select(this).property("value")
            // run the updateChart function with this selected option
            updateLine(selectedOption)
        })

        })   
      </script>
      <!-- <input id="hiddenstartDate" value="<%= startDate %>" style="display: none;"></input> -->
      <!-- <script>
        function makeLine(){
          console.log("hi");

          let myLine = new theLine();
          hello.push(myLine);
          myLine.plotLine();
        }
      </script> -->
      
    </div> <!-- end Line -->

    <!-- HEAT MAP -->
    <div class="chart" id="heat">
      <h1>Heat Map</h1> 

      <!--     <div id="heat"></div>--> 
      <!--     <div id="dataset-picker">--> 
      <!-- </div>--> 
    </div> <!-- end heat --> 

    <!-- MULTI LINE CHART -->
    <div class="chart" id="multiLine">
      <h1>Line Plot</h1>

      <!-- Create a div where the graph will take place -->
      <div id="my_linePlot"></div>

      <script>
        // set the dimensions and margins of the graph
        var margin = {top: 30, right: 0, bottom: 30, left: 50},
            width = 210 - margin.left - margin.right,
            height = 210 - margin.top - margin.bottom;
        
        //Read the data
        d3.csv("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered.csv", function(data) {
        
          // group the data: I want to draw one line per group
          var sumstat = d3.nest() // nest function allows to group the calculation per level of a factor
            .key(function(d) { return d.name;})
            .entries(data);
        
          // What is the list of groups?
          allKeys = sumstat.map(function(d){return d.key})
        
          // Add an svg element for each group. The will be one beside each other and will go on the next row when no more room available
          var svg2 = d3.select("#my_linePlot")
            .selectAll("uniqueChart")
            .data(sumstat)
            .enter()
            .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
            .append("g")
              .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");
        
          // Add X axis --> it is a date format
          var x = d3.scaleLinear()
            .domain(d3.extent(data, function(d) { return d.year; }))
            .range([ 0, width ]);
          svg2
            .append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).ticks(3));
        
          //Add Y axis
          var y = d3.scaleLinear()
            .domain([0, d3.max(data, function(d) { return +d.n; })])
            .range([ height, 0 ]);
          svg2.append("g")
            .call(d3.axisLeft(y).ticks(5));
        
          // color palette
          var color = d3.scaleOrdinal()
            .domain(allKeys)
            .range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])
        
          // Draw the line
          svg2
            .append("path")
              .attr("fill", "none")
              .attr("stroke", function(d){ return color(d.key) })
              .attr("stroke-width", 1.9)
              .attr("d", function(d){
                return d3.line()
                  .x(function(d) { return x(d.year); })
                  .y(function(d) { return y(+d.n); })
                  (d.values)
              })
        
          // Add titles
          svg2
            .append("text")
            .attr("text-anchor", "start")
            .attr("y", -5)
            .attr("x", 0)
            .text(function(d){ return(d.key)})
            .style("fill", function(d){ return color(d.key) })
        
        })
        </script>




    </div>

    <!-- Another Chart --> 
    <div class="chart" id="bar"> 
      <h1>Bar Chart</h1>
      <canvas id="bar-chart"></canvas>
    </div>
    

    <!-- Records and Data -->
    <script>
      
      function getRecords(selection, beta, id, weather, caller){
        var today = new Date();
        var start = document.getElementById('syear').value + '-' + document.getElementById('smonth').value + '-' + document.getElementById('sday').value;
        var end = document.getElementById('eyear').value + '-' + document.getElementById('emonth').value + '-' + document.getElementById('eday').value;
        theUrl = window.location.href+'/getdata';
        data = "id=" + id + "&prime=" + selection + "&beta=" + beta + "&weather=" + weather + "&start=" + start + "&end=" + end + "&caller=" + caller.id;
        callback = gotData; 
        httpPostAsync(theUrl,data,callback); 
      }
      function gotData(data){
        data = JSON.parse(data);
        console.log("gotdata");
        console.log(data);
      }
      
      $(document).ready(function(){
        console.log();
        var date = new Date();
        var moreThanZero = false;
        var startdate = document.getElementById('hiddenstartDate').value;
        console.log(startdate);
        startdate = (new Date(startdate)).getFullYear();
        var yearDrop = document.getElementById('syear');
        // for if a birthday dropdown exist
        for(var i = 0; date.getFullYear() - i >= startdate; ++i){
            var option = document.createElement("option");
            option.text = date.getFullYear() - i;
            if(i == 1){
              option.selected = true;
              moreThanZero = true;
            }
            yearDrop.appendChild(option);
        }
        if(moreThanZero){
          document.getElementById('smonth').selectedIndex = date.getMonth();
        }
        sgenDays();
        if(moreThanZero){
          document.getElementById('sday').selectedIndex = date.getMonth() - 1;
        }

        var yearDrop = document.getElementById('eyear');
        
        // for if a birthday dropdown exist
        for(var i = 0; date.getFullYear() - i >= startdate; ++i){
            var option = document.createElement("option");
            option.text = date.getFullYear() - i;
            yearDrop.appendChild(option);
        }
        document.getElementById('emonth').selectedIndex = date.getMonth();
        egenDays();
        
        document.getElementById('eday').selectedIndex = date.getDate() - 1;
      });

      function sgenDays(){
        var months = document.getElementById('smonth');
        var month = months.options[months.selectedIndex].value;
        var years = document.getElementById('syear');
        var year = years.options[years.selectedIndex].text;
        var day = document.getElementById('sday');
        month = new Date(Date.parse(month +" 1, 2012")).getMonth()+1
        var daysinmonth = new Date(year, month, 0).getDate();
        $(day).empty();
        for(var i = 1; i <= daysinmonth; ++i){
            var option = document.createElement("option");
            option.text = i;
            option.value = i;
            day.appendChild(option);
        }
      }
      function egenDays(){
        var months = document.getElementById('emonth');
        var month = months.options[months.selectedIndex].value;
        var years = document.getElementById('eyear');
        var year = years.options[years.selectedIndex].text;
        var day = document.getElementById('eday');
        month = new Date(Date.parse(month +" 1, 2012")).getMonth()+1
        var daysinmonth = new Date(year, month, 0).getDate();
        $(day).empty();
        for(var i = 1; i <= daysinmonth; ++i){
            var option = document.createElement("option");
            option.text = i;
            option.value = i;
            day.appendChild(option);
        }
      }
    </script><!-- End Records and Data -->

    <!-- bootstrap -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

    <!-- local javascript -->
    <script type="text/javascript" src="javascripts/statscripts/pie.js"></script>
    <!-- <script type="text/javascript" src="javascripts/statscripts/line.js"></script> -->
    <script type="text/javascript" src="javascripts/statscripts/navigation.js"></script>
    <!--<script type="text/javascript" src="javascripts/statscripts/heat.js"></script> -->
    <script type="text/javascript" src="javascripts/statscripts/bar-chart.js"></script>
  </body>

</html>
